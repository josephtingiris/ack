#!/bin/bash

PATH=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin

if [ "$DEBUG" == "" ]; then
    declare -i DEBUG=##ACK_CLIENT_DEBUG##
else
    declare -i DEBUG=$DEBUG
fi

TEMPLATE_ID="default-7"

echo
echo "ack-template-post-${TEMPLATE_ID}"
echo

ACK_BUILD_ISO=##ACK_BUILD_ISO##
ACK_CLIENT_RECOVERY=##ACK_CLIENT_RECOVERY##

echo "$(date) - $(basename "${ACK_BUILD_ISO}")" > /etc/ack-release

if [ -r "/mnt/sysimage/etc/passwd" ]; then
    # for testing via pre shell
    ROOT_DIR="/mnt/sysimage"
else
    # normal postinstall runs via chroot
    ROOT_DIR=""
fi

# authorized_keys
SSH_DIR="${ROOT_DIR}/root/.ssh"

mkdir -p "${SSH_DIR}"
chown root:root "${SSH_DIR}"
chmod 0700 "${SSH_DIR}"

ACK_SSH_AUTHORIZED_KEYS=##ACK_SSH_AUTHORIZED_KEYS##

if [ "${ACK_SSH_AUTHORIZED_KEYS}" != "" ]; then
    >"${SSH_DIR}/authorized_keys"
    for ACK_SSH_AUTHORIZED_KEY in "${ACK_SSH_AUTHORIZED_KEYS[@]}"; do
        echo $ACK_SSH_AUTHORIZED_KEY >> "${SSH_DIR}/authorized_keys"
    done
    chmod 0600 "${SSH_DIR}"/authorized_keys
fi

if [ ${ACK_CLIENT_RECOVERY} -eq 0 ]; then

    # boot recovery partition
    BOOT_DIR="${ROOT_DIR}/boot"
    RECOVERY_DIR="${BOOT_DIR}/recovery"

    if [ -d "${BOOT_DIR}" ] && [ -d "${RECOVERY_DIR}" ]; then

        HTTP_CODE=$(curl --silent -k --write-out "%{http_code}" "##ACK_CLIENT_RELEASE_URL##/${ACK_BUILD_ISO}" -o "${RECOVERY_DIR}/${ACK_BUILD_ISO}")

        if [ "${HTTP_CODE}" == "200" ] && [ -s "${RECOVERY_DIR}/${ACK_BUILD_ISO}" ]; then
            unset -v HTTP_CODE

            GRUB_CFG="$(find "${BOOT_DIR}" -type f -name grub.cfg | head -1)"
            echo "GRUB_CFG = ${GRUB_CFG}"

            if [ -d "${BOOT_DIR}/grub2" ] && [ -r "$GRUB_CFG" ]; then
                GRUB_DIR="$(dirname "${GRUB_CFG}")"
                echo "GRUB_DIR = ${GRUB_DIR}"

                CUSTOM_CFG="custom.cfg"
                HTTP_CODE=$(curl --silent -k --write-out "%{http_code}" "##ACK_CLIENT_INSTALL_URL##/?build=##ACK_CLIENT_BUILD_URI##&install=##ACK_CLIENT_INSTALL_URI##&include=ack-template-recovery-grub" -o "/tmp/${CUSTOM_CFG}")

                if [ "${HTTP_CODE}" == "200" ]; then
                    unset -v HTTP_CODE

                    if (grep -q ^menuentry "/tmp/${CUSTOM_CFG}"); then

                        if [ -d /sys/firemware/efi ]; then

                        # uefi
                        cat "/tmp/${CUSTOM_CFG}" | sed \
                            -e 's#BIOS#UEFI#g' \
                            > "${GRUB_DIR}/custom.cfg"

                    else

                        # bios
                        cat "/tmp/${CUSTOM_CFG}" | sed \
                            -e 's#UEFI#BIOS#g' \
                            -e 's#initrdefi#initrd#g' \
                            -e 's#linuxefi#linux#g' \
                            > "${GRUB_DIR}/custom.cfg"

                        fi

                    # common

                    sed -i \
                        -e "s+##INITRAMFS##+${INITRAMFS}+g" \
                        -e "s+##VMLINUZ##+${VMLINUZ}+g" \
                        "${GRUB_DIR}/custom.cfg"

                    cat "${GRUB_DIR}/custom.cfg" && echo

                    echo "+ grub2-mkconfig -o ${GRUB_CFG}"
                    grub2-mkconfig -o "${GRUB_CFG}"

                    cp "${GRUB_CFG}" "${RECOVERY_DIR}"
                    cp "${GRUB_DIR}/custom.cfg" "${RECOVERY_DIR}"

                    echo
                    fi

                fi

                unset -v HTTP_CODE
            fi
        fi

    fi
fi

# misc
pwconv 2> /dev/null
grpconv 2> /dev/null

touch /etc/sysconfig/bash-prompt-screen
chmod 0755 /etc/sysconfig/bash-prompt-screen

# file,owner,mode; default is root:root 0644
CUSTOM_FILES=()
CUSTOM_FILES+=("/etc/colordiffrc")
CUSTOM_FILES+=("/etc/shells")
CUSTOM_FILES+=("/etc/sudoers,root:root,0400")
CUSTOM_FILES+=("/etc/ssh/ssh_config,root:root,0644")
CUSTOM_FILES+=("/etc/ssh/sshd_config,root:root,0600")
CUSTOM_FILES+=("/etc/profile.d/aliases.sh")
CUSTOM_FILES+=("/etc/profile.d/editor.sh")
CUSTOM_FILES+=("/etc/profile.d/prompt.sh")
CUSTOM_FILES+=("/etc/profile.d/root.sh")
CUSTOM_FILES+=("/etc/profile.d/timezone.sh")
CUSTOM_FILES+=("/etc/profile.d/whom.sh")
CUSTOM_FILES+=("/etc/profile.d/zzz-path.sh")
CUSTOM_FILES+=("/root/.ssh/config,root:root,0600")

for CUSTOM_FILE_DATA in "${CUSTOM_FILES[@]}"; do
    CUSTOM_FILE=${CUSTOM_FILE_DATA%%,*}

    CUSTOM_BASENAME="$(basename "${CUSTOM_FILE}")"
    HTTP_CODE=$(curl --silent -k --write-out "%{http_code}" "##ACK_CLIENT_INSTALL_URL##/file/${TEMPLATE_ID}/${CUSTOM_FILE}" -o "/tmp/${CUSTOM_BASENAME}")

    CUSTOM_OWNER=${CUSTOM_FILE_DATA#*,}
    CUSTOM_OWNER=${CUSTOM_OWNER%,*}

    if [ "${CUSTOM_OWNER}" == "${CUSTOM_FILE}" ]; then
        CUSTOM_OWNER="root:root"
    fi

    CUSTOM_MODE=${CUSTOM_FILE_DATA##*,}
    if [ "${CUSTOM_MODE}" == "${CUSTOM_FILE}" ] || [ "${CUSTOM_MODE}" == "${CUSTOM_OWNER}" ]; then
        CUSTOM_MODE="0644"
    fi

    echo "CUSTOM_FILE  = ${CUSTOM_FILE} (${HTTP_CODE}) [${CUSTOM_MODE},${CUSTOM_OWNER}]"

    if [ "${HTTP_CODE}" == "200" ]; then
        cp "/tmp/${CUSTOM_BASENAME}" "${CUSTOM_FILE}"
        if [ $? -eq 0 ]; then
            chown "${CUSTOM_OWNER}" "${CUSTOM_FILE}"
            chmod "${CUSTOM_MODE}" "${CUSTOM_FILE}"
        fi
        rm -f "/tmp/${CUSTOM_BASENAME}"
    fi

    unset -v HTTP_CODE
done
echo

touch ${ROOT_DIR}/root/.Allow
